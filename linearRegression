This below code is for ML-Linear-regression for an artificial data
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
df = pd.read_csv('USA_Housing.csv') #load the data
df.head((4)
df.columns
X = df[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',
       'Avg. Area Number of Bedrooms', 'Area Population']]
y = df[['Price']]
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)
from sklearn.linear_model import LinearRegression
lm = LinearRegression()
lm.fit(X_train,y_train)
lm.intercept_
lm.coef_
X_train.columns
coeff_df = pd.DataFrame(X.columns,lm.coef_,columns=['Coefficient'])
coeff_df
#the output helps in predicting price say an increase in one unit increases price by tht

see incase of regression we know the values yet we are asked to predict y test is the original values so we use any 30% of sample through random shuffling to check whether the x 
correlates with y or not this is the entire principle behind the linear regression again x test for testing y test is real value
